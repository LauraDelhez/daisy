TODO ---things that needs to be done with Daisy -*- outline -*-

* COMMIT

** Onsdag

*** Word dokument med figurer


** Simuler 2019

** Simuler cover crop

** Plot protein content

** Plot måletal

*** Regitze

** Kør simulering

** Plot sim tal mod måletal

** Dokumenter

** Bud på historien

Vi ser en klar og permament effekt af 6T på underjorden, men ikke en
tilsvarende effekt på rvi/udbytter

Kan vi med modellen forklare den manglende effekt?

Er der evt en "skjult forskel"?

Hvis der er en "skjult forskel", brug scenarier til at analyse om der
ville være udbytteeffekt andre år, eller over lang tid.

Overvej at beregne "klimaeffekt", denit * n2o faktor + carbon storage

**

csv file med høstdata (per blok)

run sim per plok

sammenlign sim høst og 

prøv nul flux nedre rand

er grundvandsniveauer rimelige?

* cloudiness

New module

Selected from bioclimate

weather

Arid/Humid

Weirdo dif/dir

* hysteresis

** Math:

*** We have two retention curves

Theta_w (h) and Theta_d (h)

*** The two curves must have identical endpoints:

Theta_w (0) = Theta_d (0) = Theta_sat

Theta_w (-inf) = Theta_h (-inf) = Theta_res

*** When we switch from drying to wetting, we scale the curve linearly:

(1) Theta_s (h) = Theta_w (h) * alpha + beta

(2) Theta_s (0) = Theta_sat

(3) Theta_s (h_1) = Theta_1

Where (h_1, Theta_1) are the tension and water content at the point
where we switched from drying to wetting.

We now have two unknowns (alpha and beta) and known points (2) and (3)
to find them with.

Theta_sat = Theta_sat * alpha + beta

Theta_1 = Theta_w (h_1) * alpha + beta

==>

beta = Theta_1 - Theta_w (h_1) * alpha

Theta_sat = Theta_sat * alpha + Theta_1 - Theta_w (h_1) * alpha

Theta_sat - Theta_1 = (Theta_sat - Theta_w (h_1)) * alpha

alpha = (Theta_sat - Theta_1) / (Theta_sat - Theta_w (h_1))
beta = Theta_sat / (Theta_sat * alpha)

** How to find Cw2_s (specific water capacity)

(4) Cw2_s (h) = dTheta_s (h) / dh

Insert (1):

(5) Cw2_s (h) = (dTheta_w (h) * alpha + beta) / dh

==> 

(6) Cw2_s (h) = Cw2_w (h) + alpha

** How to find h_s (Theta)

Theta_s (h) = Theta_w (h) * alpha + beta

==>

Theta_w (h) = (Theta_s (h) - beta) / alpha

h_w (Theta_w (h)) = h_w ((Theta_s (h) - beta) / alpha)

h = h_w ((Theta_s (h) - beta) / alpha)

h = h (!)

h_s (Theta_s) = h_w ((Theta_s - beta) / alpha)

** We need two soil->hydraulic

One for state one for fast access

class HydraulicHysteresis : public Hydraulic
{
  // The two curves.
  const Hydraulic& wetting;
  const Hydraulic& drying;

  // State
  bool is_wetting;
  double Theta_alpha;
  double Theta_beta;
  double K_alpha;
  double K_beta;

  double Theta (double h) const
  {
    if (is_wetting)     
      return wetting.Theta (h) * Theta_alpha + Theta_beta;
   else 
      return drying.Theta (h) * Theta_alpha + Theta_beta;
  }

  double h (double Theta) const
  {
    if (is_wetting)     
      return wetting.h ((Theta - Theta_beta) / Theta_alpha);
   else 
      return drying.h ((Theta - Theta_beta) / Theta_alpha);
  }

  double Cw2 (double h) const
  {
    if (is_wetting)     
      return wetting.Cw2 (h) + Theta_alpha ;
   else 
      return drying.Cw2 (h) + Theta_alpha;
  }

  double K (h) const
  {
    if (is_wetting)     
      return wetting.K (h) * K_alpha + K_beta;
   else 
      return drying.K (h) * K_alpha + K_beta;
  }
  
  
  void tick (double h_old, double h, double dt)
  {
    if (is_wetting && h_old > h)
      {
         Theta_old = Theta (h_old);
         set_drying (h_old, Theta_old);
      }
    if (!is_wetting && h_old < h)
      {
         Theta_old = Theta (h_old);
         set_wetting (h_old, Theta_old);
      }
  }
      
  void set_wetting (double h_s, double Theta_s)
  {
    Theta_sat = wetting.Theta (0)
    Theta_alpha = (Theta_sat - Theta_s) / (Theta_sat - wetting.Theta (h_s))
    Theta_beta = Theta_sat / (Theta_sat * alpha)
    // TODO: Find K_alpha and K_beta
    is_wetting = true;
  }

  void set_drying (double h_s, double Theta_s)
  {
    // TODO: Find Theta_alpha and Theta_beta
    // TODO: Find K_alpha and K_beta
    is_wetting = false;
  }
         
};  
  

** New state variables

** Mofidy functions

*** hyseresis (h_old, h, dt)

*** set_porosity

*** tillage


* Daisy

** Weather:

*** WindHeight [m]

New parameter, mandatory if wind speed is specified

*** Field-Windbreak [dg]

Optional parameter, default 0

* RAINPROOF

** DONE iv.cvs should contain all days + mark if "in window" and "typical"

** DONE windows.cvs skal indeholde et flag der siger om den er "acceptabel"

** DONE iv-useful.cvs:

Skal indeholde kun indeholde typiske dage i acceptable vinduer

** iv-wait.cvs:

*** Ny søjle: WaitValue

0 if we can't wait

Cm(today) / min (Cm(rest pf windows))

foreach aday

   best = 0

   find window

      for each wday in window

          if wday > aday

	      best = max (Cm (aday) / Cm (wday), best)

   WaitValue = best              
      

* RAINPROOF

** DONE Plot BBCH start / end

** Extend window for Atlantis

** DONE Create "CPH-1hourP-dates.csv" and "CPH-8hourP-dates.csv" files

** Value of waiting...

M(today) / min (M (day); day in rest of application window)

Prediction should use BBCH, #day with this BBCH

** Risk of waiting?

** We need to evaluate on complete application windows

** I need to train on application windows that include last day

* RAINPROOF ML

** Læs Jeanne papers

** Læs pandas med alle data

** Lav ny panda med application windows

*** udregn gennemsnit, median, spredning, max, min for hvert vindue 

** Udregn app day max relativ til median og average for hver vindue

** plot max/min vs frekvens for alle vinduer

** plot for subsets: soil classes, product/season, "danger class"

danger class er vinduerne opdelt i max per

** Udreg korrelation mellem "rel max" og features

** Træn ML for udregning af "rel max"

* RAINPROOF projekt plan

** Før sommerferie

*** Sommerferie

** Data analyse og ML

** Skriv Q3 rapport

*** Send Q3 rapport

*** Oktober 2 møde

*** Skype møde om slutrapport?

** Sensitivity 

** Slutrapport

*** Januar: Plantekongres

*** Februar: Præsentation i Monheim

* Jeanne & CPE

** Onsdagsmøder

** Hjælp til ML (Q3)

** Hjælp til slutrapport (Q4)

* VIP møde evt. med BWS

* ML

** Prøv udregne "basis" for vindue, "day/basis" per dag. Forudsig den sidste

* RejsUd


* Få Daisy til at oversætte til Windows igen (Fra Linux?)

* Maja / Per: Validation article 

* 2x_Kf equil + non-equil

* Artikler

** Rodartikel ES&M

** OM init

* Skyethed med timeværdier?

* Ny version af Hypres ark

* Ny version af Charlottes afdræningstest.

* Tidlig vækst

Erstat DSLAI05 med Seed baseret tidlig vækst. Søren havde en formel,
men vi skal have en test setup.

* Regression test

* Daisy problemer

** DMI's nye "nedbørskorrigering"

** Ny ligning for biopore til matrix flow fra Søren

** Brug massebalance til at udregne (vertical) flux fra bunden.

Husk drænnoder!

